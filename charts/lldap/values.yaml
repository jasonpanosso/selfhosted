# Default values for lldap.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

bootstrap:
  enabled: true
  doCleanup: true
  admin:
    username:
      secret:
        name: ""
        key: "username"
    password:
      secret:
        name: ""
        key: "password"
  groups:
    configs:
      enabled: false
      path: "/bootstrap/group-configs"
      volumeName: "group-configs"
      secretName: ""
    schemas:
      enabled: false
      path: "/bootstrap/group-schemas"
      volumeName: "group-schemas"
      secretName: ""
  users:
    configs:
      enabled: false
      path: "/bootstrap/user-configs"
      volumeName: "user-configs"
      secretName: ""
    schemas:
      enabled: false
      path: "/bootstrap/user-schemas"
      volumeName: "user-schemas"
      secretName: ""
  env: []
  envFrom: []
  volumes: []
  volumeMounts: []

lldap:
  basedn: ""
  keySeed:
    secret:
      name: ""
      key: ""
  jwt:
    secret:
      name: ""
      key: ""
  admin:
    password:
      secret:
        name: ""
        key: "password"
  httpURL: ""
  smtp:
    enablePasswordReset: false
    server:
      address: ""
      port: 587
    encryption: ""
    from: ""
    to: ""
    user:
      secret:
        name: ""
        usernameKey: "username"
        passwordKey: "password"
  databaseURL:
    secret:
      name: ""
      key: "url"

replicaCount: 1

image:
  repository: lldap/lldap
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

env: []
envFrom: []
initContainers: []

pod:
  ports:
    ldap: 3890
    ldaps: 6360
    webui: 17170

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: true
  type: ClusterIP
  ldap:
    enable: true
    port: 3890
  ldaps:
    enable: false
    port: 6360
  webui:
    enable: true
    port: 17170

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: lldap.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# volumes:
#   - name: lldap-data
#     persistentVolumeClaim:
#       claimName: lldap-data

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# volumeMounts:
#   - name: lldap-data
#     mountPath: "/data"

nodeSelector: {}

tolerations: []

affinity: {}

persistance:
  enabled: false
  size: 100Mi
  storageClass: local-path
  accessModes:
    - ReadWriteOnce
