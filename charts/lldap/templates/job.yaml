{{- if .Values.bootstrap.enabled }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "lldap.fullname" . }}-bootstrap
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-6"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
  labels:
    {{- include "lldap.labels" . | nindent 4 }}
data:
  bootstrap.sh: |
{{ .Files.Get "files/bootstrap.sh" | indent 4 }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "lldap.fullname" . }}-bootstrap
  labels:
    {{- include "lldap.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  backoffLimit: 5
  template:
    metadata:
      labels:
        {{- include "lldap.labels" . | nindent 8 }}
    spec:
      restartPolicy: OnFailure
      containers:
      - name: bootstrap
        image: "{{ .Values.image.repository }}:v{{ .Values.image.tag | default .Chart.AppVersion }}"
        command:
          - /bootstrap/bootstrap.sh
        {{- with .Values.bootstrap.envFrom }}
        envFrom:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        env:
          - name: LLDAP_URL
            value: "http://{{ include "lldap.fullname" . }}:{{ .Values.service.webui.port }}"
          - name: DO_CLEANUP
            value: {{ .Values.bootstrap.doCleanup | quote }}

          {{- if and .Values.bootstrap.admin.username.secret.name .Values.bootstrap.admin.username.secret.key }}
          - name: LLDAP_ADMIN_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.bootstrap.admin.username.secret.name }}
                key: {{ .Values.bootstrap.admin.username.secret.key }}
          {{- end }}

          {{- if and .Values.bootstrap.admin.password.secret.name .Values.bootstrap.admin.password.secret.key }}
          - name: LLDAP_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.bootstrap.admin.password.secret.name }}
                key: {{ .Values.bootstrap.admin.password.secret.key }}
          {{- end }}

          {{- if .Values.bootstrap.users.configs.enabled }}
          - name: USER_CONFIGS_DIR
            value: {{ .Values.bootstrap.users.configs.path }}
          {{- end }}
          {{- if .Values.bootstrap.users.schemas.enabled }}
          - name: USER_SCHEMAS_DIR
            value: {{ .Values.bootstrap.users.schemas.path }}
          {{- end }}
          {{- if .Values.bootstrap.groups.configs.enabled }}
          - name: GROUP_CONFIGS_DIR
            value: {{ .Values.bootstrap.groups.configs.path }}
          {{- end }}
          {{- if .Values.bootstrap.groups.schemas.enabled }}
          - name: GROUP_SCHEMAS_DIR
            value: {{ .Values.bootstrap.groups.schemas.path }}
          {{- end }}

          {{- with .Values.bootstrap.env }}
            {{- toYaml . | nindent 10 }}
          {{- end }}

        volumeMounts:
          {{- if .Values.bootstrap.users.configs.enabled }}
          - name: {{ .Values.bootstrap.users.configs.volumeName }}
            mountPath: {{ .Values.bootstrap.users.configs.path }}
            readOnly: true
          {{- end }}

          {{- if .Values.bootstrap.users.schemas.enabled }}
          - name: {{ .Values.bootstrap.users.schemas.volumeName }}
            mountPath: {{ .Values.bootstrap.users.schemas.path }}
            readOnly: true
          {{- end }}

          {{- if .Values.bootstrap.groups.configs.enabled }}
          - name: {{ .Values.bootstrap.groups.configs.volumeName }}
            mountPath: {{ .Values.bootstrap.groups.configs.path }}
            readOnly: true
          {{- end }}

          {{- if .Values.bootstrap.groups.schemas.enabled }}
          - name: {{ .Values.bootstrap.groups.schemas.volumeName }}
            mountPath: {{ .Values.bootstrap.groups.schemas.path }}
            readOnly: true
          {{- end }}

          {{- with .Values.bootstrap.volumeMounts }}
            {{- toYaml . | nindent 10 }}
          {{- end }}

          - name: bootstrap
            mountPath: /bootstrap/bootstrap.sh
            subPath: bootstrap.sh
            readOnly: true
      volumes:
        - name: bootstrap
          configMap:
            name: "{{ include "lldap.fullname" . }}-bootstrap"
            defaultMode: 0555
            items:
              - key: bootstrap.sh
                path: bootstrap.sh

        {{- if .Values.bootstrap.users.configs.enabled }}
        - name: {{ .Values.bootstrap.users.configs.volumeName }}
          secret:
            secretName: {{ .Values.bootstrap.users.configs.secretName }}
        {{- end }}

        {{- if .Values.bootstrap.users.schemas.enabled }}
        - name: {{ .Values.bootstrap.users.schemas.volumeName }}
          secret:
            secretName: {{ .Values.bootstrap.users.schemas.secretName }}
        {{- end }}

        {{- if .Values.bootstrap.groups.configs.enabled }}
        - name: {{ .Values.bootstrap.groups.configs.volumeName }}
          secret:
            secretName: {{ .Values.bootstrap.groups.configs.secretName }}
        {{- end }}

        {{- if .Values.bootstrap.groups.schemas.enabled }}
        - name: {{ .Values.bootstrap.groups.schemas.volumeName }}
          secret:
            secretName: {{ .Values.bootstrap.groups.schemas.secretName }}
        {{- end }}

      {{- with .Values.bootstrap.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
