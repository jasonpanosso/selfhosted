---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: prowlarr
  template:
    metadata:
      labels:
        app: prowlarr
    spec:
      initContainers:
        - name: wait-for-cnpg
          image: postgres:17
          command: ["sh", "-c"]
          args:
            - |
              echo "Waiting for pgcluster to be ready..."
              until psql prowlarr -c '' 2>&1; do
                sleep 2
              done
              echo "pgcluster ready"
          env:
            - name: PGCONNECT_TIMEOUT
              value: "3"
            - name: PGHOST
              value: pgcluster-rw.servarr.svc.cluster.local
            - name: PGUSER
              value: prowlarr
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: prowlarr-db
                  key: password
          securityContext:
            allowPrivilegeEscalation: false
      containers:
        - image: ghcr.io/linuxserver/prowlarr:version-1.31.2.4975
          imagePullPolicy: Always
          name: prowlarr
          envFrom:
            - configMapRef:
                name: standard-env
            - configMapRef:
                name: prowlarr
          env:
            - name: PROWLARR__POSTGRES__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: prowlarr-db
                  key: password
            - name: PROWLARR__AUTH__APIKEY
              valueFrom:
                secretKeyRef:
                  name: servarr-api-keys
                  key: prowlarr
            - name: FILE__PROWLARR__LOG__DBENABLED
              value: /tmp/false
          ports:
            - containerPort: 9696
              name: http
          readinessProbe:
            httpGet:
              path: /login
              port: 9696
            initialDelaySeconds: 10
            periodSeconds: 15
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: config
              mountPath: /config
            - name: booleans
              mountPath: /tmp
      volumes:
        - name: config
          emptyDir: {}
        - name: booleans
          emptyDir: {}
