apiVersion: batch/v1
kind: CronJob
metadata:
  name: configure
spec:
  schedule: "0 7 * * *" # 7 AM
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
            - name: wait-for-services
              image: curlimages/curl:8.1.2
              command: ["/bin/sh", "-c"]
              args:
                - |
                  set -e
                  for svc in prowlarr radarr sonarr; do
                    echo "Waiting for ${svc} to be online..."
                    until curl -sf "http://${svc}/ping"; do
                      echo "Service ${svc} not ready yet. Retrying in 5 seconds..."
                      sleep 5
                    done
                    echo "${svc} ready!"
                  done

                  until curl -sf "http://qbittorrent"; do
                    echo "Service qbittorrent not ready yet. Retrying in 5 seconds..."
                    sleep 5
                  done
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop: [ALL]
                seccompProfile:
                  type: RuntimeDefault

            - name: buildarr-envsubst
              image: alpine:latest
              command:
                - sh
                - "-c"
                - |
                  apk add --no-cache gettext && \
                    envsubst < /buildarr/buildarr.yaml > /buildarr-envsubst/buildarr.yaml
              env:
                - name: RADARR_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: servarr-api-keys
                      key: radarr
                - name: SONARR_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: servarr-api-keys
                      key: sonarr
                - name: PROWLARR_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: servarr-api-keys
                      key: prowlarr
              envFrom:
                - configMapRef:
                    name: standard-env
              volumeMounts:
                - name: buildarr-envsubst
                  mountPath: /buildarr-envsubst
                - name: buildarr
                  mountPath: /buildarr
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop: [ALL]
                seccompProfile:
                  type: RuntimeDefault

          containers:
            - name: buildarr
              image: jpanosso/rebuildarr-testing:0.0.4
              command: ["sh", "-c", "buildarr run /config/buildarr.yaml"]
              envFrom:
                - configMapRef:
                    name: standard-env
              volumeMounts:
                - name: buildarr-envsubst
                  mountPath: /config
              resources:
                requests:
                  cpu: 50m
                  memory: 256Mi
                limits:
                  cpu: 250m
                  memory: 512Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop: [ALL]
                seccompProfile:
                  type: RuntimeDefault

            - name: configarr
              image: ghcr.io/raydak-labs/configarr:latest
              imagePullPolicy: Always
              env:
                - name: RADARR_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: servarr-api-keys
                      key: radarr
                - name: SONARR_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: servarr-api-keys
                      key: sonarr
              envFrom:
                - configMapRef:
                    name: standard-env
              volumeMounts:
                - name: cache
                  mountPath: /app/repos
                  subPath: configarr-repos
                - name: configarr
                  mountPath: /app/config
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop: [ALL]
                seccompProfile:
                  type: RuntimeDefault

            - name: configure-radarr-download-clients
              image: badouralix/curl-jq:alpine
              command:
                [
                  "sh",
                  "-c",
                  '/scripts/configure_download_clients.sh "http://radarr:7878/api/v3/downloadclient" /scripts/radarrDownloadClient.json',
                ]
              env:
                - name: API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: servarr-api-keys
                      key: radarr
                - name: QBITTORRENT_PASSWORD
                  value: ""
              envFrom:
                - configMapRef:
                    name: standard-env
              volumeMounts:
                - name: scripts
                  mountPath: /scripts
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop: [ALL]
                seccompProfile:
                  type: RuntimeDefault

            - name: configure-sonarr-download-clients
              image: badouralix/curl-jq:alpine
              command:
                [
                  "sh",
                  "-c",
                  '/scripts/configure_download_clients.sh "http://sonarr:8989/api/v3/downloadclient" /scripts/sonarrDownloadClient.json',
                ]
              env:
                - name: API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: servarr-api-keys
                      key: sonarr
                - name: QBITTORRENT_PASSWORD
                  value: ""
              volumeMounts:
                - name: scripts
                  mountPath: /scripts
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop: [ALL]
                seccompProfile:
                  type: RuntimeDefault

          volumes:
            - name: cache
              emptyDir: {}
              # persistentVolumeClaim:
              #   claimName: media-app-data
            - name: configarr
              configMap:
                name: configarr
            - name: buildarr-envsubst
              emptyDir: {}
            - name: buildarr
              configMap:
                name: buildarr
            - name: scripts
              configMap:
                name: servarr-configuration-scripts
                defaultMode: 0777
          restartPolicy: Never
