---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: &app calibre-web-automated
  labels:
    app.kubernetes.io/name: *app
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: *app
  serviceName: *app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: *app
    spec:
      containers:
        - image: docker.io/crocodilestick/calibre-web-automated:V3.0.4 # {"$imagepolicy": "flux-system:calibre-web-automated"}
          name: *app
          ports:
            - containerPort: 8083
              name: http
          readinessProbe:
            httpGet:
              path: /login
              port: 8083
            failureThreshold: 5
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 3
          # resources:
          #   requests:
          #     cpu: 1000m
          #     memory: 1Gi
          #   limits:
          #     cpu: 4000m
          #     memory: 8Gi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: ingest
              mountPath: /cwa-book-ingest
            - name: config
              mountPath: /config
            - name: library
              mountPath: /calibre-library
        - image: ghcr.io/calibrain/calibre-web-automated-book-downloader:sha-3d2d285
          imagePullPolicy: Always
          name: calibre-web-automated-book-downloader
          env:
            - name: CLOUDFLARE_PROXY_URL
              value: http://flaresolverr.flaresolverr.svc.cluster.local
          ports:
            - containerPort: 8084
              name: http
          readinessProbe:
            httpGet:
              path: /
              port: 8084
            initialDelaySeconds: 10
            periodSeconds: 15
          # resources:
          #   requests:
          #     cpu: 50m
          #     memory: 256Mi
          #   limits:
          #     cpu: 500m
          #     memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: ingest
              mountPath: /cwa-book-ingest
      volumes:
        - name: ingest
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: config
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
        storageClassName: rook-ceph-block
    - metadata:
        name: library
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 100Gi
        storageClassName: rook-ceph-block-hdd
