---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app coredns
spec:
  chartRef:
    kind: OCIRepository
    name: *app
  interval: 1h
  values:
    fullnameOverride: coredns
    image:
      repository: mirror.gcr.io/coredns/coredns
    replicaCount: 2
    serviceAccount:
      create: true
    isClusterService: true

    # https://github.com/coredns/helm/blob/master/charts/coredns/README.md#adopting-existing-coredns-resources
    k8sAppLabelOverride: kube-dns
    service:
      name: kube-dns
      clusterIP: 10.96.0.10

    resources:
      limits:
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
    env:
      - name: GOMEMLIMIT
        value: 120MiB

    servers:
      - zones:
          - zone: .
            scheme: dns://
            use_tcp: true
        port: 53
        plugins:
          - name: errors
          - name: health
            configBlock: |-
              lameduck 5s
          - name: ready
          - name: kubernetes
            parameters: cluster.local in-addr.arpa ip6.arpa
            configBlock: |-
              pods verified
              fallthrough in-addr.arpa ip6.arpa
          - name: autopath
            parameters: "@kubernetes"
          - name: forward
            parameters: . /etc/resolv.conf
          - name: cache
            configBlock: |-
              prefetch 20
              serve_stale
          - name: loop
          - name: reload
          - name: loadbalance
          - name: prometheus
            parameters: 0.0.0.0:9153
          - name: log
            configBlock: |-
              class error

    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: Exists

    topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: '{{ template "coredns.name" . }}'
            app.kubernetes.io/instance: "{{ .Release.Name }}"
        topologyKey: kubernetes.io/hostname
        maxSkew: 1
        whenUnsatisfiable: ScheduleAnyway

    tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node.cloudprovider.kubernetes.io/uninitialized
        operator: Exists
        effect: NoSchedule
