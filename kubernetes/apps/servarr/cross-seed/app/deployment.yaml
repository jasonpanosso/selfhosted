---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master-standalone/deployment-apps-v1.json
apiVersion: apps/v1
kind: Deployment
metadata:
  name: &app cross-seed
  labels:
    app.kubernetes.io/name: *app
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: *app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: *app
    spec:
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - image: ghcr.io/cross-seed/cross-seed:6.12.6@sha256:4a954ce1f8b17d48d652544eb03f916a6f59f0f58499ede7b380d7f7dcc01ae8
          args: [daemon]
          name: *app
          env:
            - name: CROSS_SEED_PORT
              value: "80"
            - name: TZ
              value: Etc/UTC
          ports:
            - containerPort: 80
              name: http
          livenessProbe: &probes
            httpGet:
              path: /api/ping
              port: 80
            initialDelaySeconds: 0
            periodSeconds: 15
            timeoutSeconds: 1
            failureThreshold: 3
          readinessProbe: *probes
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
            limits:
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: [ALL]
          volumeMounts:
            - name: config
              mountPath: /config
            - name: configjs
              mountPath: /config/config.js
              subPath: config.js
              readOnly: true
            - name: media
              mountPath: /data/downloads
              subPath: downloads
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media
        - name: config
          persistentVolumeClaim:
            claimName: *app
        - name: configjs
          secret:
            secretName: cross-seed
