---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master-standalone/cronjob-batch-v1.json
apiVersion: batch/v1
kind: CronJob
metadata:
  name: &app configarr
spec:
  schedule: "0 7 * * *" # 7 AM
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 600
      template:
        spec:
          initContainers:
            - name: wait-for-services
              image: curlimages/curl:8.13.0
              command: ["/bin/sh", "-c"]
              args:
                - |
                  set -e
                  for svc in prowlarr radarr sonarr; do
                    echo "Waiting for $svc to be online..."
                    until curl -sf "http://$svc/ping"; do
                      echo "Service $svc not ready yet. Retrying in 5 seconds..."
                      sleep 5
                    done
                    echo "$svc ready!"
                  done
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop: [ALL]
                seccompProfile:
                  type: RuntimeDefault
          containers:
            - name: *app
              image: ghcr.io/raydak-labs/configarr:1.13.5 # {"$imagepolicy": "flux-system:configarr"}
              imagePullPolicy: Always
              env:
                - name: TZ
                  value: Etc/UTC
                - name: RADARR_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: servarr-api-keys
                      key: radarr
                - name: SONARR_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: servarr-api-keys
                      key: sonarr
              volumeMounts:
                - name: cache
                  mountPath: /app/repos
                  subPath: configarr-repos
                - name: configarr
                  mountPath: /app/config
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop: [ALL]
                seccompProfile:
                  type: RuntimeDefault
          volumes:
            - name: cache
              emptyDir: {}
            - name: configarr
              configMap:
                name: configarr
          restartPolicy: Never
