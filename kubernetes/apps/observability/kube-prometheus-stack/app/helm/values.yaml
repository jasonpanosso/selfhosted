---
crds:
  enabled: true
  upgradeJob:
    enabled: true
    forceConflicts: true
cleanPrometheusOperatorObjectNames: true

prometheusOperator:
  enabled: true
prometheus:
  enabled: true
  prometheusSpec:
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: rook-ceph-block
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
    additionalArgs:
      - name: web.enable-otlp-receiver
        value: ""
    enableFeatures:
      - exemplar-storage
    retention: 14d
    retentionSize: ""
    serviceMonitorSelector:
      matchLabels:
        none: none
    podMonitorSelector:
      matchLabels:
        none: none
    probeSelector:
      matchLabels:
        none: none
    scrapeConfigSelector:
      matchLabels:
        none: none
    tsdb:
      outOfOrderTimeWindow: 30m
    exemplars:
      max_exemplars: 100000
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    scrapeConfigSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
  server:
    otlp:
      keepIdentifyingResourceAttributes: true
      translationStrategy: UnderscoreEscapingWithSuffixes # dashboard compatibility
      promoteResourceAttributes:
        - service.instance.id
        - service.name
        - service.namespace
        - service.version
        - cloud.availability_zone
        - cloud.region
        - container.name
        - deployment.environment
        - deployment.environment.name
        - k8s.cluster.name
        - k8s.container.name
        - k8s.cronjob.name
        - k8s.daemonset.name
        - k8s.deployment.name
        - k8s.job.name
        - k8s.namespace.name
        - k8s.pod.name
        - k8s.replicaset.name
        - k8s.statefulset.name

kubernetesServiceMonitors:
  enabled: true

alertmanager:
  enabled: true
  alertmanagerSpec:
    alertmanagerConfiguration:
      name: alertmanager
      global:
        resolveTimeout: 5m
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: rook-ceph-block
          resources:
            requests:
              storage: 1Gi

kubeEtcd:
  service:
    selector:
      component: kube-apiserver # etcd runs on control plane nodes
kubeApiServer:
  enabled: true
kubelet:
  enabled: true
kubeletService:
  enabled: true
kubeControllerManager:
  enabled: true
coreDns:
  enabled: true

kubeProxy:
  enabled: false

nodeExporter:
  enabled: true
prometheus-node-exporter:
  fullnameOverride: node-exporter
  prometheus:
    monitor:
      enabled: true

kubeStateMetrics:
  enabled: true
kube-state-metrics:
  fullnameOverride: kube-state-metrics
  prometheus:
    monitor:
      enabled: true

grafana:
  enabled: false
  forceDeployDashboards: true

additionalPrometheusRulesMap:
  dockerhub-rules:
    groups:
      - name: dockerhub
        rules:
          - alert: DockerhubRateLimitRisk
            annotations:
              summary: Kubernetes cluster Dockerhub rate limit risk
            expr: count(time() - container_last_seen{image=~"(docker.io).*",container!=""} < 30) > 100
            labels:
              severity: critical
  oom-rules:
    groups:
      - name: oom
        rules:
          - alert: OomKilled
            annotations:
              summary: Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes.
            expr: (kube_pod_container_status_restarts_total - kube_pod_container_status_restarts_total offset 10m >= 1) and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason="OOMKilled"}[10m]) == 1
            labels:
              severity: critical
