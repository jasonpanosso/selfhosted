---
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: node
spec:
  mode: daemonset
  serviceAccount: otel-collector-opentelemetry-collector
  priorityClassName: system-node-critical
  resources:
    limits:
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 512Mi
  env:
    - name: GOMEMLIMIT
      value: 400MiB
    - name: OTEL_RESOURCE_ATTRIBUTES
      value: "k8s.cluster.name=prod"
    - name: OTEL_K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
  tolerations:
    - operator: Exists
      effect: NoSchedule
  nodeSelector:
    kubernetes.io/os: linux
  config:
    exporters:
      debug/metrics: {}
      debug/logs: {}
      debug/traces: {}
      otlphttp/loki:
        endpoint: http://loki-gateway.observability.svc.cluster.local/otlp
        tls:
          insecure: true

    processors:
      batch:
        send_batch_max_size: 1500
        send_batch_size: 1000
        timeout: 1s
      memory_limiter:
        check_interval: 1s
        limit_percentage: 80
        spike_limit_percentage: 15
      resourcedetection/env:
        detectors: [env]
        timeout: 2s
        override: false
      k8sattributes:
        filter:
          node_from_env_var: OTEL_K8S_NODE_NAME
        passthrough: false
        extract:
          otel_annotations: true
          labels:
            - from: pod
              key: app.kubernetes.io/name
              tag_name: service.name
            - from: pod
              key: k8s-app
              tag_name: service.name
            - from: pod
              key: app.kubernetes.io/instance
              tag_name: k8s.app.instance
            - from: pod
              key: app.kubernetes.io/version
              tag_name: service.version
            - from: pod
              key: app.kubernetes.io/component
              tag_name: k8s.app.component
          metadata:
            - k8s.namespace.name
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.node.name
            - k8s.pod.start_time
            - k8s.deployment.name
            - k8s.replicaset.name
            - k8s.replicaset.uid
            - k8s.daemonset.name
            - k8s.daemonset.uid
            - k8s.job.name
            - k8s.job.uid
            - k8s.container.name
            - k8s.cronjob.name
            - k8s.statefulset.name
            - k8s.statefulset.uid
            - container.image.tag
            - container.image.name
            - k8s.cluster.uid
        pod_association:
          - sources:
              - from: resource_attribute
                name: k8s.pod.uid
          - sources:
              - from: resource_attribute
                name: k8s.pod.name
              - from: resource_attribute
                name: k8s.namespace.name
              - from: resource_attribute
                name: k8s.node.name
          - sources:
              - from: resource_attribute
                name: k8s.pod.ip
          - sources:
              - from: resource_attribute
                name: k8s.pod.name
              - from: resource_attribute
                name: k8s.namespace.name
          - sources:
              - from: connection

    receivers:
      filelog:
        exclude: []
        include:
          - /var/log/pods/*/*/*.log
        include_file_name: false
        include_file_path: true
        operators:
          - id: container-parser
            max_log_size: 102400
            type: container
        retry_on_failure:
          enabled: true
        start_at: end

    service:
      pipelines:
        logs:
          receivers:
            - filelog
          processors:
            - memory_limiter
            - k8sattributes
            - resourcedetection/env
            - batch
          exporters:
            # - debug/logs
            - otlphttp/loki
  volumeMounts:
    - mountPath: /var/log/pods
      name: varlogpods
      readOnly: true
  volumes:
    - hostPath:
        path: /var/log/pods
      name: varlogpods
---
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: cluster
spec:
  mode: deployment
  priorityClassName: system-cluster-critical
  replicas: 2
  serviceAccount: otel-collector-opentelemetry-collector
  resources:
    limits:
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 256Mi
  env:
    - name: GOMEMLIMIT
      value: 200MiB
    - name: OTEL_RESOURCE_ATTRIBUTES
      value: "k8s.cluster.name=prod"
  config:
    extensions:
      k8s_leader_elector:
        auth_type: serviceAccount
        lease_name: otel-collector-daemonset-leader
        lease_namespace: observability

    exporters:
      debug: {}
      otlphttp/loki:
        endpoint: http://loki-gateway.observability.svc.cluster.local/otlp
        tls:
          insecure: true

    processors:
      batch:
        send_batch_max_size: 1500
        send_batch_size: 1000
        timeout: 1s
      memory_limiter:
        check_interval: 1s
        limit_percentage: 80
        spike_limit_percentage: 15
      resourcedetection/env:
        detectors: [env]
        timeout: 2s
        override: false
      k8sattributes:
        passthrough: false
        extract:
          otel_annotations: true
          labels:
            - from: pod
              key: app.kubernetes.io/name
              tag_name: service.name
            - from: pod
              key: k8s-app
              tag_name: service.name
            - from: pod
              key: app.kubernetes.io/instance
              tag_name: k8s.app.instance
            - from: pod
              key: app.kubernetes.io/version
              tag_name: service.version
            - from: pod
              key: app.kubernetes.io/component
              tag_name: k8s.app.component
          metadata:
            - k8s.namespace.name
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.node.name
            - k8s.pod.start_time
            - k8s.deployment.name
            - k8s.replicaset.name
            - k8s.replicaset.uid
            - k8s.daemonset.name
            - k8s.daemonset.uid
            - k8s.job.name
            - k8s.job.uid
            - k8s.container.name
            - k8s.cronjob.name
            - k8s.statefulset.name
            - k8s.statefulset.uid
            - container.image.tag
            - container.image.name
            - k8s.cluster.uid
        pod_association:
          - sources:
              - from: resource_attribute
                name: k8s.pod.uid
          - sources:
              - from: resource_attribute
                name: k8s.pod.name
              - from: resource_attribute
                name: k8s.namespace.name
              - from: resource_attribute
                name: k8s.node.name
          - sources:
              - from: resource_attribute
                name: k8s.pod.ip
          - sources:
              - from: resource_attribute
                name: k8s.pod.name
              - from: resource_attribute
                name: k8s.namespace.name
          - sources:
              - from: connection

    receivers:
      k8sobjects:
        k8s_leader_elector: k8s_leader_elector
        auth_type: serviceAccount
        objects:
          - name: events
            group: events.k8s.io
            mode: watch
            exclude_watch_type:
              - DELETED

    service:
      extensions:
        - k8s_leader_elector
      pipelines:
        logs:
          receivers:
            - k8sobjects
          processors:
            - memory_limiter
            - k8sattributes
            - resourcedetection/env
            - batch
          exporters:
            # - debug
            - otlphttp/loki
