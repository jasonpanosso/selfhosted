---
deploymentStrategy:
  type: RollingUpdate
persistence:
  enabled: false
  type: pvc
  storageClassName: rook-ceph-block
  accessModes:
    - ReadWriteOnce
  size: 5Gi
  finalizers:
    - kubernetes.io/pvc-protection

podAnnotations:
  reloader.stakater.com/auto: "true"

resources:
  requests:
    cpu: 500m
    memory: 1Gi
  limits:
    memory: 1Gi

env:
  GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
  GF_EXPLORE_ENABLED: true
  GF_FEATURE_TOGGLES_ENABLE: publicDashboards
  GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
  GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
  GF_SECURITY_COOKIE_SAMESITE: grafana
  GF_SERVER_ROOT_URL: https://grafana.${domain}.${tld}

grafana.ini:
  news:
    news_feed_enabled: false
  paths:
    data: /var/lib/grafana/
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  analytics:
    check_for_updates: false
    check_for_plugin_updates: false
    reporting_enabled: false
  log:
    mode: console
  users:
    auto_assign_org: true
    auto_assign_org_role: Admin
  auth.proxy:
    enabled: true
    header_name: Remote-User
    headers: "Name:Remote-Name Email:Remote-Email Groups:Remote-Groups"
    auto_sign_up: true

datasources:
  datasources.yaml:
    apiVersion: 1
    deleteDatasources:
      - {name: Alertmanager, orgId: 1}
      - {name: Prometheus, orgId: 1}
      - {name: Loki, orgId: 1}
    datasources:
      - name: Prometheus
        type: prometheus
        uid: prometheus
        access: proxy
        url: http://prometheus-operated.observability.svc.cluster.local:9090
        isDefault: true
      - name: Alertmanager
        type: alertmanager
        uid: alertmanager
        access: proxy
        url: http://alertmanager-operated.observability.svc.cluster.local:9093
        jsonData:
          implementation: prometheus
      - name: Loki
        type: loki
        uid: loki
        access: proxy
        url: http://loki-gateway.observability.svc.cluster.local
        jsonData:
          maxLines: 250

dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: default
        orgId: 1
        folder: ""
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
      - name: data
        orgId: 1
        folder: Data
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/data
      - name: kubernetes
        orgId: 1
        folder: Kubernetes
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/kubernetes
      - name: network
        orgId: 1
        folder: Network
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/network
      - name: storage
        orgId: 1
        folder: Storage
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/storage
      - name: system
        orgId: 1
        folder: System
        type: file
        disableDeletion: false
        editable: true
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards/system

dashboards:
  data:
    cloudnative-pg:
      # renovate: depName="CloudnativePG"
      gnetId: 20417
      revision: 4
      datasource:
        - {name: DS_PROMETHEUS, value: Prometheus}
  network:
    Traefik:
      # renovate: depName="Traefik Official Kubernetes Dashboard"
      gnetId: 17347
      revision: 9
      datasource: Prometheus
    cert-manager:
      # renovate: depName="Cert-manager-Kubernetes"
      gnetId: 20842
      revision: 3
      datasource: Prometheus
    envoy:
      # renovate: depName="Envoy Proxy Monitoring gRPC"
      gnetId: 23239
      revision: 1
      datasource:
        - {name: DS_AFRANET_PROMETHEUS, value: Prometheus}
  storage:
    etcd-storage:
      # renovate: depName="etcd"
      gnetId: 22236
      revision: 1
      datasource:
        - {name: DS_VICTORIAMETRICS, value: Prometheus}
    ceph-cluster:
      # renovate: depName="Ceph Cluster"
      gnetId: 2842
      revision: 18
      datasource: Prometheus
    ceph-osd:
      # renovate: depName="Ceph - OSD (Single)"
      gnetId: 5336
      revision: 9
      datasource: Prometheus
    ceph-pools:
      # renovate: depName="Ceph - Pools"
      gnetId: 5342
      revision: 9
      datasource: Prometheus
    ceph-usage:
      # renovate: depName="Ceph Usage"
      gnetId: 23246
      revision: 1
      datasource:
        - {name: DS_VICTORIAMETRICS, value: Prometheus}
    kubernetes-pvc:
      # renovate: depName="Kubernetes PVC Stats"
      gnetId: 23233
      revision: 6
      datasource:
        - {name: DS_PROMETHEUS, value: Prometheus}
    volsync:
      # renovate: depName="VolSync Dashboard"
      gnetId: 21356
      revision: 3
      datasource:
        - {name: DS_PROMETHEUS, value: Prometheus}
        - {name: VAR_REPLICATIONDESTNAME, value: ".*-dst"}
  kubernetes:
    kubernetes-api-server:
      # renovate: depName="Kubernetes / System / API Server"
      gnetId: 15761
      revision: 19
      datasource: Prometheus
    kubernetes-coredns:
      # renovate: depName="Kubernetes / System / CoreDNS"
      gnetId: 15762
      revision: 20
      datasource: Prometheus
    kubernetes-global:
      # renovate: depName="Kubernetes / Views / Global"
      gnetId: 15757
      revision: 43
      datasource: Prometheus
    kubernetes-namespaces:
      # renovate: depName="Kubernetes / Views / Namespaces"
      gnetId: 15758
      revision: 42
      datasource: Prometheus
    # kubernetes-nodes:
    #   # renovate: depName="Kubernetes / Views / Nodes"
    #   gnetId: 15759
    #   revision: 35
    #   datasource: Prometheus
    k8s-views-nodes:
      url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
      token: ""
    kubernetes-pods:
      # renovate: depName="Kubernetes / Views / Pods"
      gnetId: 15760
      revision: 36
      datasource: Prometheus
    kubernetes-volumes:
      # renovate: depName="K8s / Storage / Volumes / Cluster"
      gnetId: 11454
      revision: 14
      datasource: Prometheus
  system:
    node-exporter-full:
      # renovate: depName="Node Exporter Full"
      gnetId: 1860
      revision: 41
      datasource:
        - {name: DS_PROMETHEUS, value: Prometheus}
    smartctl-exporter:
      # renovate: depName="SMARTctl Exporter Dashboard"
      gnetId: 22604
      revision: 2
      datasource:
        - {name: DS_PROMETHEUS, value: Prometheus}
    spegel:
      # renovate: depName="Spegel"
      gnetId: 18089
      revision: 1
      datasource:
        - {name: DS_PROMETHEUS, value: Prometheus}
    prometheus:
      # renovate: depName="Prometheus"
      gnetId: 19105
      revision: 7
      datasource: Prometheus

sidecar:
  alerts:
    enabled: true
    searchNamespace: ALL
  dashboards:
    enabled: true
    searchNamespace: ALL
    labelValue: ""
    label: grafana_dashboard
    folderAnnotation: grafana_folder
    provider:
      disableDelete: true
      foldersFromFilesStructure: true
  datasources:
    enabled: true
    label: grafana_datasource
    searchNamespace: ALL
  notifiers:
    enabled: true
    label: grafana_notifier
    searchNamespace: ALL

serviceMonitor:
  enabled: true
testFramework:
  enabled: false

plugins:
  - grafana-clock-panel
  - grafana-piechart-panel
  - grafana-worldmap-panel
  - natel-discrete-panel
  - pr0ps-trackmap-panel
  - vonage-status-panel

topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: kubernetes.io/hostname
    whenUnsatisfiable: DoNotSchedule
    labelSelector:
      matchLabels:
        app.kubernetes.io/name: grafana
