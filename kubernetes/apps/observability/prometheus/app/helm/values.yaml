alertmanager:
  enabled: false
prometheus-pushgateway:
  enabled: false
kube-state-metrics:
  enabled: false
prometheus-node-exporter:
  enabled: false

server:
  name: server
  revisionHistoryLimit: 3
  fullnameOverride: "prometheus"
  retention: "14d"
  retentionSize: ""

  extraFlags:
    - web.enable-lifecycle
    - web.enable-otlp-receiver
    - enable-feature=exemplar-storage
    - enable-feature=remote-write-receiver

  otlp:
    keep_identifying_resource_attributes: true
    translation_strategy: UnderscoreEscapingWithSuffixes
    promote_resource_attributes:
      - service.instance.id
      - service.name
      - service.namespace
      - service.version
      - cloud.availability_zone
      - cloud.region
      - container.name
      - deployment.environment
      - deployment.environment.name
      - k8s.cluster.name
      - k8s.container.name
      - k8s.cronjob.name
      - k8s.daemonset.name
      - k8s.deployment.name
      - k8s.job.name
      - k8s.namespace.name
      - k8s.pod.name
      - k8s.replicaset.name
      - k8s.statefulset.name
  tsdb:
    out_of_order_time_window: 30m
  configPath: /etc/config/prometheus.yml
  exemplars:
    max_exemplars: 100000

  strategy:
    type: Recreate

  persistentVolume:
    enabled: true
    accessModes:
      - ReadWriteOnce
    mountPath: /data
    size: 8Gi
    storageClass: local-path

  resources:
    {}
    # limits:
    #   cpu: 500m
    #   memory: 512Mi
    # requests:
    #   cpu: 500m
    #   memory: 512Mi

serverFiles:
  prometheus.yml:
    rule_files:
      - /etc/config/recording_rules.yml
      - /etc/config/alerting_rules.yml
    scrape_configs: []
